<h1><%= @product.title %></h1>
<p><%= @product.description %></p>
<p><%= @product.price %></p>

<!-- edit_question_path needs id so pass in @product -->
<%= link_to 'Edit', edit_product_path(@product) %>

<!-- link_to by default sends a get request, so it gets intercepted -->
<!-- <%= link_to 'Delete', product_path(@product) %> -->

<%# Rails enables us to make links end non-GET requests by setting the
    `method` attribute for `link_to`. Rails uses Javascript to accomplish that. %>
<%= link_to 'Delete', product_path(@product),
                      method: :delete,
                      data: { confirm: 'Are you sure?'} %>

<hr/>
<h2>Write a Review</h2>

<%= @review.errors.full_messages.join(', ') %>
<%= form_for [@product, @review] do |f| %>
<div class="form-group">
  <%= f.label :rating %>
  <%= f.text_field :rating, { class: 'form-control' }%>
</div>
<div class="form-group">
  <%= f.label :body %>
  <%= f.text_area :body, { class: 'form-control' }%>
</div>

<!-- <%= f.submit %> -->
  <%= button_tag(type: 'submit', class: "btn btn-primary") do %>
    Submit Review
  <% end %>
<% end %>

<br>
<hr/>
<h2>Reviews</h2>
  <% @product.reviews.each do |r| %>
    <div class="well">
      <p>Rating: <%= r.rating %></p>
      <p>Comments: <%= r.body %></p>
      <%= link_to 'Delete', [@product, r],
      method: :delete, data: { confirm: 'Are you sure?' } %>
    </div>
  <% end %>
